#
# Stack User Yaml for Geodesy
#
keypair: 'geodesy'
autoscaling_units:
  -
    unit_title: WebServices
    asg_config:
      instance_type: 't2.small'
      health_check_grace_period: '480'
      userdata: |
        #!/usr/bin/env bash

        yum -y remove java-1.7.0-openjdk
        yum -y install java-1.8.0-openjdk

        yum -y install tomcat8
        yum -y install postgresql94-server

        yum install -y ruby
        yum install -y wget
        cd /home/ec2-user
        aws s3 cp s3://aws-codedeploy-ap-southeast-2/latest/install . --region ap-southeast-2
        chmod +x ./install
        ./install auto
        service codedeploy-agent start
        service codedeploy-agent status

        pip install credstash==1.12.0

        service tomcat8 start
    elb_config:
      elb_listeners_config:
        -
          instance_protocol: 'HTTP'
          instance_port: '8080'
          loadbalancer_protocol: 'HTTPS'
          loadbalancer_port: '443'
      ssl_certificate_id: 'arn:aws:acm:ap-southeast-2:094928090547:certificate/07496dcd-6975-4dd4-8986-533488587f0e'
      elb_health_check: 'HTTP:8080/'
    dependencies:
     - 'Db:5432'
  -
    unit_title: GeoServer
    asg_config:
       image_id: "ami-30586b53"
       instance_type: 't2.small'
       userdata: |
         #cloud-config
         runcmd:
          - service tomcat8 start
    elb_config:
      elb_listeners_config:
        -
          instance_protocol: 'HTTP'
          instance_port: '8080'
          loadbalancer_protocol: 'HTTPS'
          loadbalancer_port: '443'
      ssl_certificate_id: 'arn:aws:acm:ap-southeast-2:094928090547:certificate/07496dcd-6975-4dd4-8986-533488587f0e'
      elb_health_check: 'HTTP:8080/geoserver/web/'
    dependencies:
     - 'Db:5432'
#  -
#    unit_title: 52NorthSos
#    asg_config:
#       image_id: "ami-90fec3f3"
#       instance_type: 't2.small'
#       userdata: |
#         #cloud-config
#         runcmd:
#          - service tomcat8 start
#    elb_config:
#      elb_listeners_config:
#        -
#          instance_protocol: 'HTTP'
#          instance_port: '8080'
#          loadbalancer_protocol: 'HTTPS'
#          loadbalancer_port: '443'
#      ssl_certificate_id: 'arn:aws:acm:ap-southeast-2:094928090547:certificate/07496dcd-6975-4dd4-8986-533488587f0e'
#      elb_health_check: 'HTTP:8080/52n-sos-webapp/'
#    dependencies:
#     - 'Db:5432'
database_units:
  -
    unit_title: Db

ec2_scheduled_shutdown: {{ ec2_scheduled_shutdown }}
